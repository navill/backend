# Generated by Django 2.1 on 2019-07-27 10:21

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import multiselectfield.db.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='BookingHistory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('bookingNumber', models.CharField(editable=False, max_length=200, unique=True)),
                ('seat_number', models.CharField(max_length=200)),
                ('booking_date', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Cinema',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cinema_name', models.CharField(max_length=100)),
                ('detail', models.CharField(max_length=100)),
            ],
            options={
                'ordering': ['cinema_name'],
            },
        ),
        migrations.CreateModel(
            name='Movie',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('img_url', models.CharField(max_length=200)),
                ('release_date', models.DateField()),
                ('booking_rate', models.FloatField()),
                ('title', models.CharField(max_length=100)),
                ('age', models.IntegerField(choices=[(0, '전체 관람'), (1, '12세 관람가'), (2, '15세 관람가'), (3, '청소년 관람불가')], default=0)),
                ('type', multiselectfield.db.fields.MultiSelectField(choices=[(0, '디지털'), (1, '3D'), (2, '4D'), (3, 'ATMOS'), (4, '자막'), (5, '더빙')], max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='Movie_detail',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('running_time', models.IntegerField()),
                ('description', models.TextField()),
                ('director', models.CharField(max_length=15)),
                ('cast', models.TextField()),
                ('genre', models.TextField()),
                ('movie', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='movie_id_detail', to='database.Movie')),
            ],
        ),
        migrations.CreateModel(
            name='Schedule_date',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
            ],
            options={
                'ordering': ['-date'],
            },
        ),
        migrations.CreateModel(
            name='Schedule_time',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('seat_count', models.IntegerField(default=0, editable=False)),
                ('start_time', models.TimeField()),
                ('date', models.DateField()),
                ('type', models.CharField(max_length=15, null=True)),
            ],
            options={
                'ordering': ['start_time'],
            },
        ),
        migrations.CreateModel(
            name='Screen',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('screen_number', models.IntegerField()),
                ('total_seat', models.IntegerField()),
                ('cinema_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='cinema_id', to='database.Cinema')),
            ],
            options={
                'ordering': ['screen_number'],
            },
        ),
        migrations.CreateModel(
            name='Seat',
            fields=[
                ('schedule_time', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, related_name='schedule_time_seat', serialize=False, to='database.Schedule_time')),
                ('seat_number', models.TextField(blank=True, default='')),
            ],
        ),
        migrations.AddField(
            model_name='schedule_time',
            name='date_id',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='date_id_schedule', to='database.Schedule_date'),
        ),
        migrations.AddField(
            model_name='schedule_time',
            name='movie_id',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='movie_id_schedule', to='database.Movie'),
        ),
        migrations.AddField(
            model_name='schedule_date',
            name='screen_id',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='screen_id_schedule', to='database.Screen'),
        ),
        migrations.AddField(
            model_name='bookinghistory',
            name='date',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='dates', to='database.Schedule_date'),
        ),
        migrations.AddField(
            model_name='bookinghistory',
            name='movie_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='movie_id_booking', to='database.Movie'),
        ),
        migrations.AddField(
            model_name='bookinghistory',
            name='screen',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='screens', to='database.Screen'),
        ),
        migrations.AddField(
            model_name='bookinghistory',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='users', to=settings.AUTH_USER_MODEL),
        ),
    ]
